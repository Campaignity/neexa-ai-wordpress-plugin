1. Implement the OAuth-like page that takes in user credentials, posts them to identity provider to get access_token.
    - when token is got, post it with the data as shown:  window.parent.postMessage({ type: "authentication", payload: { 'access_token': '<token here>' } }, "*");    
    - other notes: this login page should be a simple extension of our current login page

2. Implement an api consumer that fetches the total number of conversations today, total actively following items in the CRM, total campaigns this month
    - this logic should reside in the includes/class-neexa-ai-api-consumer.php

3. Implement an api consumer that fetches the information about a given ai agent, ie whether data collection feature enable status, crm enable status, channels integration status
    - this logic should reside in the includes/class-neexa-ai-api-consumer.php

4. Implement the AI Agent configuration page. The configuration provides (1). a selection for AI agent (agents are prefetched at the wordpress backend via our api, the pagination also goes through wordpress backend, this way we never have to deal with CORS). (2). Toggle live/unlive status for the selected agent. (3) Quicks links to go to dashboard for other options like update avatar, etc (?thought: how to ensure that no login is necessary at Neexa dashboard if someone is already authed at wordpress )
    - this design should reside in neexa-ai-configure.php